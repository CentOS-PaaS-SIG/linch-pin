- name: "DeProvisioning AWS_EC2 Resource"
  ec2:
    aws_access_key: "{{ res_def_item.0 }}"
    aws_secret_key: "{{  res_def_item.1 }}"
    instance_ids: "{{ res_def_item.2 }}"
    state: 'absent'
    region: "{{ res_def_item.3 }}"
    wait: yes
  when: res_def_item.4 == res_def_item.5 and res_def_item.6 == "aws_ec2" 
  with_together:
    - "{{ aws_access_key_id | default(omit) }}"
    - "{{ aws_secret_access_key | default(omit) }}"
    - "{{ tp_out.instance_ids | join(',') }}"
    - "{{ res_def['region'] }}"
    - "{{ tp_out['instances'][0]['tags']['resource_group_name'] }}"
    - "{{ res_grp_name }}"
    - "{{ res_def['res_type'] }}"
  loop_control:
    loop_var: res_def_item
  register: output_item

#- name: "set s3 mode when state is present"
#  set_fact:
#    s3_mode: "delete"
#  when: state == "absent" and res_def['res_type'] == 'aws_s3'
#
#- name: "Provisioning AWS_S3 Resource"
#  s3:
#    aws_access_key: "{{ aws_access_key_id | default(omit) }}"
#    aws_secret_key: "{{  aws_secret_access_key | default(omit) }}"
#    bucket: "{{ res_def['res_name'] }}"
#    mode: "{{ s3_mode }}"
#    region: "{{ res_def['region'] }}"
#    permission: "{{ res_def['permission']| default(omit) }}"
#  when: res_def['res_type'] == 'aws_s3'
