---
# This playbook contains common play that will be ran before the provisioning starts.

- name: "schema check for given topology file"
  schema_check: 
    data: "{{ data }}"
    schema: "{{ schema }}"
  register: output
  tags: schema_validation

- name: "DEBUG:: checking the registered output of schema validation"
  debug:
    msg: "{{ item }}"
  with_dict: "{{ output }}"

- name: "filtering the output for openstack resource groups"
  set_fact: 
    os_res_grps: "{{ output.output.data.resource_groups | selectattr('res_group_type', 'equalto', 'openstack') | list }}"

- name: "filtering the output for aws resource groups"
  set_fact:
    aws_res_grps: "{{ output.output.data.resource_groups | selectattr('res_group_type', 'equalto', 'aws') | list }}"

- name: "filtering the output for google cloud resource groups"
  set_fact:
    gcloud_res_grps: "{{ output.output.data.resource_groups | selectattr('res_group_type', 'equalto', 'gcloud') | list }}"

- name: "filtering the output for duffy resource groups"
  set_fact: 
    duffy_res_grps: "{{ output.output.data.resource_groups | selectattr('res_group_type', 'equalto', 'duffy') | list }}"

- name: "Registering resource group vars from topology"
  set_fact:
    res_grp_vars: "{{ output.output.data.resource_group_vars }}"

#- name: "DEBUG:: checking registered output of os_res_grps"
#  debug:
#    msg: "{{ item }}"
#  with_items: "{{ os_res_grps }}"

#- name: "filtering the output for awsec2 resource groups"
#  set_fact:
#    aws_res_grps: "{{ output.output.data.resource_groups | selectattr('res_group_type', 'equalto', 'aws') | list }}"

#- name: "DEBUG:: checking registered output of aws_res_grps"
#  debug:
#    msg: "{{ item }}"
#  with_items: "{{ aws_res_grps }}"

- name: "output vars"
  set_fact:
    topology_outputs: {}

